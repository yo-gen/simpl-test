c
@m
c
@m.scorecard
@scorecard
@result
@commentary
c
@result
@commentary
c
@m.scorecard
c
@m.scorecard
@scorecard
c
@scorecard[current_player_name][:balls_played]
@scorecard[current_player_name]
c
@scorecard[current_player_name]["balls_played"]
@scorecard[current_player_name][balls_played]
@scorecard[current_player_name]
c
@scorecard[current_player_name.to_sym]
@scorecard[current_player_name]
current_player_name
@scorecard
c
@result
@commentary
c
@commentary
c
@commentary
@result
c
m.balls_left
c
m.score_left
m.methods
m.class
m
@balls_left
m.balls_left
m
c
@balls_left
c
@balls_left
c
      weighted.each do |item, weight|         return item if target <= weight        target -= weight end
      weighted.each do |item, weight|
      end      weighted.each do |item, weight|
        target -= weight
        return item if target <= weight
      weighted.each do |item, weight|
weighted
target
c
target = rand(1..max)
max
